@layer common_components {
	/* Scope all styles to the component root and keep specificity low with :where() */
	:where(.MonacoMarkdownEditor) {
		& :where(.yRemoteSelection) {
			filter: opacity(0.5);
			background-color: var(--user-color, hsl(var(--ring) / 0.75));
		}

		/* Remote caret/selection head decoration */
		& :where(.yRemoteSelectionHead) {
			position: absolute;
			box-sizing: border-box;
			height: 100%;
			border-left: 2px solid var(--user-color, hsl(var(--ring)));

			&::after {
				position: absolute;
				/* Content is injected dynamically per user by the component */
				content: "";
				top: -1.4em;
				left: -1px;
				padding: 0.125rem 0.375rem;
				background: var(--user-color, hsl(var(--ring)));
				color: white;
				font-size: 12px;
				line-height: 1;
				border-radius: 0.25rem;
				white-space: nowrap;
				pointer-events: none;
			}
		}
	}
}

/* Floating content widget container positioned top-left of line content */
.MonacoMarkdownDiffEditor :where(.MonacoMarkdownDiffEditor-widget) {
	position: absolute;
	display: inline-flex;
	gap: 4px;
	align-items: center;
	white-space: nowrap;
	z-index: 10;
}

/* Green and black square buttons, 24px */
.MonacoMarkdownDiffEditor :where(.MonacoMarkdownDiffEditor-widget-accept),
.MonacoMarkdownDiffEditor :where(.MonacoMarkdownDiffEditor-widget-discard) {
	width: 24px;
	height: 24px;
	border: 1px solid hsl(var(--border));
	border-radius: 4px;
	cursor: pointer;
	box-sizing: border-box;
}

.MonacoMarkdownDiffEditor :where(.MonacoMarkdownDiffEditor-widget-accept) {
	background: hsl(var(--success, 142 76% 36%));
}

.MonacoMarkdownDiffEditor :where(.MonacoMarkdownDiffEditor-widget-discard) {
	background: #000;
}
