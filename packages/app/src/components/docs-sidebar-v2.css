@import "react-complex-tree/lib/style-modern.css" layer(external);

/* React Complex Tree CSS Overrides to match shadcn/ui sidebar styling */
@layer components {
	/* Override react-complex-tree variables to match shadcn/ui */
	.rct-tree-container {
		/* Match sidebar colors exactly */
		--rct-color-tree-bg: hsl(var(--sidebar));
		--rct-color-tree-text: hsl(var(--sidebar-foreground));

		/* Match interactive states */
		--rct-color-focustree-item-selected-bg: hsl(var(--sidebar-accent));
		--rct-color-focustree-item-selected-text: hsl(var(--sidebar-accent-foreground));
		--rct-color-focustree-item-hover-bg: hsl(var(--sidebar-accent));
		--rct-color-focustree-item-hover-text: hsl(var(--sidebar-accent-foreground));

		/* Match spacing and dimensions */
		--rct-item-height: 32px; /* h-8 from shadcn */
		--rct-item-padding: 8px; /* p-2 from shadcn */
		--rct-arrow-size: 16px; /* h-4 w-4 from shadcn */

		/* Match borders and radius */
		--rct-color-tree-border: hsl(var(--sidebar-border));
		--rct-radius: 6px; /* rounded-md from shadcn */

		/* Remove default spacing */
		--rct-item-padding-left: 0px;
		--rct-item-padding-right: 0px;
	}

	/* Hide react-complex-tree's default styles that conflict */
	.rct-tree-item-arrow,
	.rct-tree-item-title-container {
		background: none;
		border: none;
		padding: 0;
		margin: 0;
	}

	/* Hide default selection indicators since we use custom ones */
	.rct-tree-item-li-selected,
	.rct-tree-item-li-focused {
		background: transparent;
		outline: none;
		border: none;
	}

	/* Hide default hover effects */
	.rct-tree-item-title-container:hover {
		background: transparent;
	}

	/* Remove default padding/margins that interfere with our layout */
	.rct-tree-root {
		padding: 0;
		margin: 0;
	}

	.rct-tree {
		background: transparent;
		border: none;
		outline: none;
	}

	/* Allow react-complex-tree to handle arrows properly */
	.rct-tree-item-arrow {
		background: transparent;
		border: none;
		padding: 0;
		margin: 0;
	}

	/* Style the container */
	.rct-tree-item-li {
		list-style: none;
		margin: 0;
		padding: 0;
		background: transparent;
		border: none;
	}

	/* Ensure proper text styling */
	.rct-tree-item-title {
		font-size: 0.875rem; /* text-sm */
		font-weight: inherit;
		color: inherit;
		background: transparent;
		border: none;
		padding: 0;
		margin: 0;
	}

	/* Remove default focus styles */
	.rct-tree-item-button:focus,
	.rct-tree-item-button:focus-visible {
		outline: none;
		box-shadow: none;
	}

	/* Remove all default interactive styles */
	.rct-tree-item-button {
		background: transparent;
		border: none;
		padding: 0;
		margin: 0;
		font-family: inherit;
		font-size: inherit;
		color: inherit;
		cursor: inherit;
	}

	/* Ensure proper nesting alignment */
	.rct-tree-item-li > .rct-tree-item-title-container {
		margin: 0;
		padding: 0;
	}

	/* Remove any default borders or backgrounds on nested items */
	.rct-tree-item-li ul {
		border: none;
		background: transparent;
		padding: 0;
		margin: 0;
	}

	/* Remove rename input styling conflicts */
	.rct-tree-item-renamingInput {
		background: hsl(var(--background));
		border: 1px solid hsl(var(--border));
		border-radius: calc(var(--radius) - 2px);
		padding: 4px 8px;
		font-size: 0.875rem;
		color: hsl(var(--foreground));
		outline: none;
	}

	.rct-tree-item-renamingInput:focus {
		border-color: hsl(var(--ring));
		box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
	}
}
